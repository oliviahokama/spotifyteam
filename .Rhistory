install.packages(c("lubridate", "spotifyr"))
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
?search_spotify
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
View(beatles)
View(response)
features <- get_track_audio_features("Despacito")
?get_track_audio_features
features <- search_spotify("Despacito")
View(features)
?search_spotify
features <- search_spotify("Despacito", type = "track")
View(features)
features <- search_spotify("Despacito", type = c("track", "artist"), limit = 1)
View(features)
features <- search_spotify("Despacito", type = c("track"), limit = 1)
View(features)
View(features[[1]][[1]])
View(top_5_month)
features <- search_spotify("Perfect", type = c("track"), limit = 1)
features <- search_spotify("Perfect", type = c("track"), limit = 1)
View(features)
View(features[[1]][[1]])
View(top_100_year)
top_100_year <- top_100_year %>%
mutate(info = search_spotify(song, type = "track", limit = 1))
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
top_100_year_info <- top_100_year %>%
search_spotify(song, type = "track", limit = 1)
top_100_year_info <- search_spotify(top_100_year$song, type = "track", limit = 1)
top_100_year_info <- lapply(search_spotify(top_100_year$song, type = "track", limit = 1))
top_100_year_info <- lapply(top_100_year, search_spotify(top_100_year$song, type = "track", limit = 1))
song_ids <- append(song_ids, search_spotify(song, type = "track", limit = 1))
song_ids <- c()
for (song in top_100_year$song) {
song_ids <- append(song_ids, search_spotify(song, type = "track", limit = 1))
}
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
View(song_ids)
View(features)
features <- search_spotify("Smooth", type = c("track"), limit = 1)
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
top_100_year <- top_100_year %>%
mutate(id = song_ids)
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
View(top_100_year)
View(song_ids)
for (song in top_100_year$song) {
id <- search_spotify(song, type = "track", limit = 1)
song_ids <- append(song_ids, id$id)
}
top_100_year <- top_100_year %>%
mutate(id = song_ids)
song_ids <- c()
for
for (song in top_100_year$song) {
id <- search_spotify(song, type = "track", limit = 1)
song_ids <- append(song_ids, id$id)
}
for (song in top_100_year$song) {
id <- search_spotify(song, type = "track", limit = 1)
song_ids <- append(song_ids, id$id)
}
song_ids <- c()
for (song in top_100_year$song) {
id <- search_spotify(song, type = "track", limit = 1)
song_ids <- append(song_ids, id$id)
}
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
song_ids <- c()
for (song in top_100_year$song) {
id <- search_spotify(song, type = "track", limit = 1)
song_ids <- append(song_ids, id$id)
}
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
top_100_year <- top_100_year %>%
mutate(id = search_spotify(song, type = "track", limit = 1))
apply(top_100_year, 1, search_spotify(top_100_year$song, "track", limit = 1))
apply(top_100_year$song, 1, search_spotify(song, "track", limit = 1))
apply(top_100_year$song, 1, search_spotify(), song, "track", limit = 1)
apply(top_100_year$song, 1, search_spotify(song), "track", limit = 1)
searchify <- function(song) {
search_spotify(song, "track", limit = 1)
}
apply(top_100_year$song, 1, searchify)
apply(top_100_year, 1, searchify)
top_100_year <- top_100_year$song %>%
mutate(id = searchify(song))
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
mapply(top_100_year$song, 1, searchify)
apply(top_100_year$song, 1, searchify)
dim(top_100_year$song)
lapply(top_100_year$song, 1, searchify)
lapply(top_100_year$song, searchify)
View(top_100_year)
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
View(test)
top_100_year <- top_100_year$song %>%
mutate(id =test$id)
top_100_year <- top_100_year$song %>%
mutate(id = test$id)
top_100_year$id <- test
View(top_100_year)
top_100_year$id <- test$id
top_100_year$id <- test[[1]][[id]]
top_100_year$id <- test[[1]]
top_100_year$id <- test
View(top_100_year[[4]][[1]])
top_100_year <- top_100_year %>%
id = id$id
top_100_year <- top_100_year %>%
id <- id$id
View(top_100_year[[4]][[41]])
top_100_year$data <- test
top_100_year <- top_100_year %>%
mutate(id = data$id)
View(top_100_year[[4]][[1]])
top_100_year$data
top_100_year$data["id"]
top_100_year <- top_100_year %>%
mutate(id = data$id)
top_100_year$data$id
source("spotify_analysis.R")
for (tibble in top_100_year$data) {
print(tibble$id)
}
for (tibble in top_100_year$data) {
ids <- tibble$id
}
for (tibble in top_100_year$data) {
ids <- tibble$id
}
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
source('~/INFO201/spotifyteam/test.R', echo=TRUE)
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
for (tibble in top_100_year$data) {
ids <- tibble$id
}
for (tibble in top_100_year$data) {
ids <- append(ids, tibble$id)
}
top_100_year$id <- ids
View(top_100_year)
first_test <- get_track_audio_features(ids[1])
View(first_test)
first_test <- lapply(top_100_year$id, get_track_audio_features)
View(first_test)
View(response)
danceability <- c()
energy <- c()
speechiness <- c()
accousticness <- c()
for (tibble in first_test) {
danceability <- append(danceability, tibble$danceability)
energy <- append(energy, tibble$energy)
speechiness <- append(speechiness, tibble$speechiness)
accousticness <- append(accousticness, tibble$accousticness)
}
danceability <- c()
energy <- c()
speechiness <- c()
acousticness <- c()
for (tibble in first_test) {
danceability <- append(danceability, tibble$danceability)
energy <- append(energy, tibble$energy)
speechiness <- append(speechiness, tibble$speechiness)
acousticness <- append(acousticness, tibble$acousticness)
}
View(top_100_year)
View(top_100_year[[4]][[41]])
dim(top_100_year$data[[1]])
top_100_year <- top_100_year %>%
filter(dim(data) != 0)
dim(top_100_year$data[[41]])
length(top_100_year$data[[41]])
length(top_100_year$data[[1]])
top_100_year <- top_100_year %>%
filter(length(data) != 0)
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
View(top_100_year)
top_100_year <- top_100_year %>%
filter(length(data) == 0)
top_100_year <- top_100_year %>%
filter(length(data) != 0)
top_100_year <- top_songs_by_month %>%
group_by(year) %>%
top_n(., 50, score) %>%
ungroup(year) %>%
select(year, artist, song) %>%
distinct()
top_100_year <- top_100_year %>%
filter(length(data) != 0)
source('~/INFO201/spotifyteam/test.R', echo=TRUE)
top_100_year <- top_100_year %>%
filter(song != "	Lady Marmalade (Voulez-Vous Coucher Aver Moi Ce Soir?)")
top_100_year <- top_100_year %>%
filter(song != "Lady Marmalade (Voulez-Vous Coucher Aver Moi Ce Soir?)")
source('~/INFO201/spotifyteam/test.R', echo=TRUE)
View(ids)
test <- lapply(top_100_year$song, searchify)
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
source('~/INFO201/spotifyteam/test.R', echo=TRUE)
ids <- c()
for (tibble in top_100_year$data) {
ids <- append(ids, tibble$id)
}
View(test)
top_100_year$data <- test
ids <- c()
for (tibble in top_100_year$data) {
ids <- append(ids, tibble$id)
}
top_100_year$id <- ids
View(top_100_year[[4]][[1]])
top_100_year <- top_100_year %>%
filter(song != "Lady Marmalade (Voulez-Vous Coucher Aver Moi Ce Soir?)")
ids <- c()
for (tibble in top_100_year$data) {
ids <- append(ids, tibble$id)
}
top_100_year$id <- ids
first_test <- lapply(top_100_year$id, get_track_audio_features)
danceability <- c()
energy <- c()
speechiness <- c()
acousticness <- c()
for (tibble in first_test) {
danceability <- append(danceability, tibble$danceability)
energy <- append(energy, tibble$energy)
speechiness <- append(speechiness, tibble$speechiness)
acousticness <- append(acousticness, tibble$acousticness)
}
get_track_audio_features(4kflIGfjdZJW4ot2ioixTB)
get_track_audio_features("4kflIGfjdZJW4ot2ioixTB")
get_track_audio_features(top_100_year$id[[304]])
song_info <- lapply(top_100_year$id, get_track_audio_features)
View(song_info)
get_track_audio_features(top_100_year$id[[303]])
get_track_audio_features("2qIhjHBPVkSxqFs0LGm1Ne")
top_100_year <- top_100_year %>%
filter(song != "Lady Marmalade (Voulez-Vous Coucher Aver Moi Ce Soir?)") %>%
filter(song != "Moves like Jagger")
top_100_year <- top_100_year %>%
filter(song != "Lady Marmalade (Voulez-Vous Coucher Aver Moi Ce Soir?)") %>%
filter(song != "Moves Like Jagger")
ids <- c()
for (tibble in top_100_year$data) {
ids <- append(ids, tibble$id)
}
top_100_year$id <- ids
song_info <- lapply(top_100_year$id, get_track_audio_features)
danceability <- c()
energy <- c()
speechiness <- c()
acousticness <- c()
for (tibble in song_info) {
danceability <- append(danceability, tibble$danceability)
energy <- append(energy, tibble$energy)
speechiness <- append(speechiness, tibble$speechiness)
acousticness <- append(acousticness, tibble$acousticness)
}
top_100_year$danceability <- danceability
top_100_year$energy <- energy
top_100_year$speechiness <- speechiness
top_100_year$acousticness <- acousticness
song_data <- top_100_year %>%
select(year, song, artist, speechiness, energy, danceability, acousticness)
View(song_data)
write.csv(song_data)
write.csv(song_data, "data/song_data.csv")
what <- read.csv("data/song_data.csv")
View(what)
example <- read.csv("data/song_data.csv", stringsAsFactors = F)
View(example)
songs <- read.csv("data/sond_data.csv", stringsAsFactors = F)
songs <- read.csv("data/song_data.csv", stringsAsFactors = F)
View(songs)
View(first_test)
View(song_info)
View(top_100_year)
single <- get_track_audio_analysis("5z6xHjCZr7a7AIcy8sPBKy")
View(single)
songs_table <- songs %>%
group_by(year) %>%
summarize(avg_dance = mean(danceability))
View(songs_table)
songs_table <- songs %>%
group_by(year) %>%
summarize(avg_dance = mean(danceability), avg_energy = mean(energy))
View(songs_table)
songs_table <- songs %>%
group_by(year) %>%
summarize(avg_dance = mean(danceability), avg_energy = mean(energy),
avg_speechiness = mean(speechiness), avg_acousticness =
mean(acousticness))
View(songs_table)
get_summary_table <- function(songs) {
songs <- songs %>%
group_by(year) %>%
summarize(avg_dance = mean(danceability), avg_energy = mean(energy),
avg_speechiness = mean(speechiness), avg_acousticness =
mean(acousticness)))
}
get_summary_table <- function(songs) {
songs <- songs %>%
group_by(year) %>%
summarize(avg_dance = mean(danceability), avg_energy = mean(energy),
avg_speechiness = mean(speechiness), avg_acousticness =
mean(acousticness))
return (songs)
}
test_function <- get_summary_table(songs)
View(test_function)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
source("summarize_table.R")
source("summary_info.R")
# import libraries
library(dplyr)
library(ggplot2)
library(reshape)
# Read in song data
songs <- read.csv("../data/song_data.csv", stringsAsFactors = F)
songs <- read.csv("~/Desktop/spotifyteam/data/song_data.csv")
View(songs)
avg_stats_per_year <- songs %>%
group_by(year) %>%
summarize(avg_speechiness = mean(speechiness),
avg_energy = mean(energy),
avg_danceability = mean(danceability),
avg_acousticness = mean(acousticness))
avg_stats_per_year <- reshape2::melt(avg_stats_per_year, id.var='year')
song_trends <- ggplot(data = avg_stats_per_year) +
geom_line(mapping = aes(x = year, y = value, col = variable)) +
xlab("Year") +
ylab("Feature Value") +
ggtitle("Trends of Song Features over time (2000 - 2019)")
View(song_trends)
avg_stats_per_year <- songs %>%
group_by(year) %>%
summarize(avg_speechiness = mean(speechiness),
avg_energy = mean(energy),
avg_danceability = mean(danceability),
avg_acousticness = mean(acousticness))
avg_stats_per_year <- reshape2::melt(avg_stats_per_year, id.var='year')
# Create visualization
song_trends <- ggplot(data = avg_stats_per_year) +
geom_line(mapping = aes(x = year, y = value, col = variable)) +
xlab("Year") +
ylab("Feature Value") +
ggtitle("Trends of Song Features over time (2000 - 2019)")
# Choose a feature to check against a regression, in this case
# we're looking at `danceability`
value <- "danceability"
feature <- songs[[value]]
danceability_trends <- ggplot(data = songs) +
geom_point(mapping = aes(x = year, y = feature), color = "blue") +
geom_smooth(mapping = aes(x = year, y = feature), color = "black") +
xlab("Year") +
ylab(value) +
ggtitle("Danceability of Top 20 Songs from 2000 - 2019")
avg_stats_per_year <- reshape2::melt(avg_stats_per_year, id.var='year')
# Create visualization
song_trends <- ggplot(data = avg_stats_per_year) +
geom_line(mapping = aes(x = year, y = value, col = variable)) +
xlab("Year") +
ylab("Feature Value") +
ggtitle("Trends of Song Features over time (2000 - 2019)")
avg_stats_per_year <- songs %>%
group_by(year) %>%
summarize(avg_speechiness = mean(speechiness),
avg_energy = mean(energy),
avg_danceability = mean(danceability),
avg_acousticness = mean(acousticness))
feature <- songs[[value]]
# Choose a feature to check against a regression, in this case
# we're looking at `danceability`
value <- "danceability"
danceability_trends <- ggplot(data = songs) +
geom_point(mapping = aes(x = year, y = feature), color = "blue") +
geom_smooth(mapping = aes(x = year, y = feature), color = "black") +
xlab("Year") +
ylab(value) +
ggtitle("Danceability of Top 20 Songs from 2000 - 2019")
song_trends
song_trends
song_trends
song_trends <- ggplot(data = avg_stats_per_year) +
geom_line(mapping = aes(x = year, y = value, col = variable)) +
xlab("Year") +
ylab("Feature Value") +
ggtitle("Trends of Song Features over time (2000 - 2019)")
song_trends
song_trends
song_trends
song_trends
song_trends <- ggplot(data = avg_stats_per_year) +
geom_line(mapping = aes(x = year, y = value, col = variable)) +
xlab("Year") +
ylab("Feature Value") +
ggtitle("Trends of Song Features over time (2000 - 2019)")
avg_stats_per_year <- songs %>%
group_by(year) %>%
summarize(avg_speechiness = mean(speechiness),
avg_energy = mean(energy),
avg_danceability = mean(danceability),
avg_acousticness = mean(acousticness))
avg_stats_per_year <- reshape2::melt(avg_stats_per_year, id.var='year')
song_trends <- ggplot(data = avg_stats_per_year) +
geom_line(mapping = aes(x = year, y = value, col = variable)) +
xlab("Year") +
ylab("Feature Value") +
ggtitle("Trends of Song Features over time (2000 - 2019)")
song_trends
value <- "danceability"
feature <- songs[[value]]
danceability_trends <- ggplot(data = songs) +
geom_point(mapping = aes(x = year, y = feature), color = "blue") +
geom_smooth(mapping = aes(x = year, y = feature), color = "black") +
xlab("Year") +
ylab(value) +
ggtitle("Danceability of Top 20 Songs from 2000 - 2019")
dancibility_trends
danceability_trends
View(top_100_year)
source('~/INFO201/spotifyteam/spotify_analysis.R', echo=TRUE)
source('~/INFO201/spotifyteam/scripts/first-chart.R', echo=TRUE)
install.packages("reshape")
source('~/INFO201/spotifyteam/scripts/first-chart.R', echo=TRUE)
View(song_trends)
View(avg_stats_per_year)
View(song_trends)
avg_stats_per_year <- songs %>%
group_by(year) %>%
summarize(avg_speechiness = mean(speechiness),
avg_energy = mean(energy),
avg_danceability = mean(danceability),
avg_acousticness = mean(acousticness))
print(song_trends)
source('~/INFO201/spotifyteam/app_server.R', echo=TRUE)
songs <- read.csv("data/song_data.csv", stringsAsFactors = F)
View(songs)
songs <- songs %>%
group_by(year) %>%
summarize(avg_speechiness = mean(speechiness),
avg_energy = mean(energy),
avg_danceability = mean(danceability),
avg_acousticness = mean(acousticness))
View(songs)
source('~/INFO201/spotifyteam/app_server.R', echo=TRUE)
source('~/INFO201/spotifyteam/app.R', echo=TRUE)
source('~/INFO201/spotifyteam/app.R', echo=TRUE)
source('~/INFO201/spotifyteam/app.R', echo=TRUE)
source('~/INFO201/spotifyteam/app_ui.R', echo=TRUE)
source('~/INFO201/spotifyteam/app.R', echo=TRUE)
runApp()
